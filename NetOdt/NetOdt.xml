<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetOdt</name>
    </assembly>
    <members>
        <member name="T:NetOdt.Constants.FileName">
            <summary>
            Constants for file names
            </summary>
        </member>
        <member name="P:NetOdt.Constants.FileName.UnkownOdtFile">
            <summary>
            The file name for an ODT document with no name
            </summary>
        </member>
        <member name="P:NetOdt.Constants.FileName.ContentFile">
            <summary>
            The file name for an content file of the ODT document
            </summary>
        </member>
        <member name="P:NetOdt.Constants.FileName.ManifestFile">
            <summary>
            The file name for an manifest file of the ODT document
            </summary>
        </member>
        <member name="T:NetOdt.Constants.FolderResource">
            <summary>
            Constants for folder resources
            </summary>
        </member>
        <member name="P:NetOdt.Constants.FolderResource.TemporaryRootFolderName">
            <summary>
            The name of the temporary root folder name
            </summary>
        </member>
        <member name="P:NetOdt.Constants.FolderResource.LocalApplicationDataPath">
            <summary>
            The path to the local application data
            </summary>
        </member>
        <member name="P:NetOdt.Constants.FolderResource.TemporaryRootFolderPath">
            <summary>
            The name of the temporary root folder path
            </summary>
        </member>
        <member name="P:NetOdt.Constants.FolderResource.PictureFolderName">
            <summary>
            The name of the picture folder inside the ODT document
            </summary>
        </member>
        <member name="P:NetOdt.Constants.FolderResource.MainfestFolderName">
            <summary>
            The name of the picture folder inside the ODT document
            </summary>
        </member>
        <member name="T:NetOdt.Enumerations.HeaderStyle">
            <summary>
            The style of a header
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.HeadingLevel01">
            <summary>
            Heading level 1
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.HeadingLevel02">
            <summary>
            Heading level 2
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.HeadingLevel03">
            <summary>
            Heading level 3
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.HeadingLevel04">
            <summary>
            Heading level 4
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.HeadingLevel05">
            <summary>
            Heading level 5
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.HeadingLevel06">
            <summary>
            Heading level 6
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.HeadingLevel07">
            <summary>
            Heading level 7
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.HeadingLevel08">
            <summary>
            Heading level 8
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.HeadingLevel09">
            <summary>
            Heading level 9
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.HeadingLevel10">
            <summary>
            Heading level 10
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.Subtitle">
            <summary>
            Subtitle
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.Signature">
            <summary>
            Signature
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.Quotations">
            <summary>
            Quotations
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.Endnote">
            <summary>
            Endnote
            </summary>
        </member>
        <member name="F:NetOdt.Enumerations.HeaderStyle.Footnote">
            <summary>
            Footnote
            </summary>
        </member>
        <member name="T:NetOdt.Helper.DirectoryHelper">
            <summary>
            Helper class to easier work with <see cref="T:System.IO.Directory"/>
            </summary>
        </member>
        <member name="M:NetOdt.Helper.DirectoryHelper.CreateDirectory(System.Uri,System.String)">
            <summary>
            Creates all directories and subdirectories in the specified path unless they already exist.
            </summary>
            <param name="uriLeft">The left part of the complete path</param>
            <param name="pathRight">The right part of the complete path</param>
        </member>
        <member name="T:NetOdt.Helper.FileHelper">
            <summary>
            Helper class to easier work with <see cref="T:System.IO.File"/>
            </summary>
        </member>
        <member name="M:NetOdt.Helper.FileHelper.Exists(System.Uri)">
            <summary>
            Determines whether the specified file exists
            </summary>
            <param name="uri">The uniform resource identifier of the file to be deleted</param>
        </member>
        <member name="M:NetOdt.Helper.FileHelper.Delete(System.Uri)">
            <summary>
            Deletes the specified file
            </summary>
            <param name="uri">The uniform resource identifier of the file to be deleted</param>
        </member>
        <member name="M:NetOdt.Helper.FileHelper.Delete(System.Uri,System.String)">
            <summary>
            Deletes the specified file
            </summary>
            <param name="uriLeft">The left part for the complete path</param>
            <param name="pathRight">The right part for the complete path</param>
        </member>
        <member name="M:NetOdt.Helper.FileHelper.Copy(System.String,System.Uri)">
            <summary>
            Copies an existing file to a new file
            </summary>
        </member>
        <member name="M:NetOdt.Helper.FileHelper.Copy(System.Uri,System.String)">
            <summary>
            Copies an existing file to a new file
            </summary>
        </member>
        <member name="M:NetOdt.Helper.FileHelper.Copy(System.Uri,System.Uri)">
            <summary>
            Copies an existing file to a new file
            </summary>
        </member>
        <member name="M:NetOdt.Helper.FileHelper.GetMineType(System.String)">
            <summary>
            Return the mine type of the file of the given file path
            </summary>
            <param name="path">The path to the file or the filename</param>
            <returns>The mine type of a file</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:NetOdt.Helper.PathHelper">
            <summary>
            Helper class to easier work with <see cref="T:System.IO.Path"/>
            </summary>
        </member>
        <member name="M:NetOdt.Helper.PathHelper.GetExtension(System.Uri)">
            <summary>
            Returns the extension of the specified uniform resource identifier
            </summary>
            <param name="uri">The uniform resource identifier of the file</param>
            <returns></returns>
        </member>
        <member name="T:NetOdt.Helper.UriHelper">
            <summary>
            Helper class to easier work with <see cref="T:System.Uri"/>
            </summary>
        </member>
        <member name="M:NetOdt.Helper.UriHelper.Combine(System.String,System.String)">
            <summary>
            Combine to path and return the resulting <see cref="T:System.Uri"/>
            </summary>
            <param name="pathLeft">The left part for the complete path</param>
            <param name="pathRight">The right part for the complete path</param>
            <returns>A <see cref="T:System.Uri"/> with the complete path</returns>
        </member>
        <member name="M:NetOdt.Helper.UriHelper.Combine(System.Uri,System.String)">
            <summary>
            Combine a path and a <see cref="T:System.Uri"/> and return the resulting <see cref="T:System.Uri"/>
            </summary>
            <param name="uriLeft">The left part for the complete path</param>
            <param name="pathRight">The right part for the complete path</param>
            <returns>A <see cref="T:System.Uri"/> with the complete path</returns>
        </member>
        <member name="M:NetOdt.Helper.UriHelper.Combine(System.Uri,System.String,System.String)">
            <summary>
            Combine a path and a <see cref="T:System.Uri"/> and return the resulting <see cref="T:System.Uri"/>
            </summary>
            <param name="uriLeft">The left part for the complete path</param>
            <param name="pathMiddle">The middle part for the complete path</param>
            <param name="pathRight">The right part for the complete path</param>
            <returns>A <see cref="T:System.Uri"/> with the complete path</returns>
        </member>
        <member name="M:NetOdt.Helper.UriHelper.Combine(System.Uri,System.Uri)">
            <summary>
            Combine to <see cref="T:System.Uri"/> and return the resulting <see cref="T:System.Uri"/>
            </summary>
            <param name="uriLeft">The left part for the complete path</param>
            <param name="uriRight">The right part for the complete path</param>
            <returns>A <see cref="T:System.Uri"/> with the complete path</returns>
        </member>
        <member name="T:NetCoreOdt.Enumerations.TextStyle">
            <summary>
            The style of a text
            </summary>
        </member>
        <member name="F:NetCoreOdt.Enumerations.TextStyle.Normal">
            <summary>
            Text without any style
            </summary>
        </member>
        <member name="F:NetCoreOdt.Enumerations.TextStyle.Bold">
            <summary>
            A bold text
            </summary>
        </member>
        <member name="F:NetCoreOdt.Enumerations.TextStyle.Italic">
            <summary>
            A italic text
            </summary>
        </member>
        <member name="F:NetCoreOdt.Enumerations.TextStyle.Underline">
            <summary>
            A text with a underline
            </summary>
        </member>
        <member name="T:NetCoreOdt.Helper.OdtHelper">
            <summary>
            Helper class to easier work with ODT files
            </summary>
        </member>
        <member name="M:NetCoreOdt.Helper.OdtHelper.CreateOdtTemplate(System.Uri@)">
            <summary>
            Create a folder with a minimum of files that are need by a ODT document
            </summary>
        </member>
        <member name="T:NetCoreOdt.Helper.StringBuilderHelper">
            <summary>
            Helper class to easier work with <see cref="T:System.Text.StringBuilder"/> objects
            </summary>
        </member>
        <member name="M:NetCoreOdt.Helper.StringBuilderHelper.ContainsLineBreaks(System.Text.StringBuilder@)">
            <summary>
            Test if a given <see cref="T:System.Text.StringBuilder"/> content contains line breaks
            </summary>
            <returns><see langword="true"/> if the content contains line breaks, otherwise <see langword="false"/></returns>
        </member>
        <member name="T:NetCoreOdt.Helper.StyleHelper">
            <summary>
            Helper class to easier work with ODT document styles
            </summary>
        </member>
        <member name="M:NetCoreOdt.Helper.StyleHelper.AddStandardTextStyles(System.Text.StringBuilder@)">
            <summary>
            Add all needed styles for all <see cref="T:NetCoreOdt.Enumerations.TextStyle"/> combinations to the style content
            </summary>
        </member>
        <member name="M:NetCoreOdt.Helper.StyleHelper.AddTableStyles(System.Text.StringBuilder@)">
            <summary>
            Add all needed styles for simple tables
            </summary>
        </member>
        <member name="M:NetCoreOdt.Helper.StyleHelper.AddPictureStyle(System.Text.StringBuilder@)">
            <summary>
            Add all needed styles for simple pictures
            </summary>
        </member>
        <member name="M:NetCoreOdt.Helper.StyleHelper.GetStyleName(NetCoreOdt.Enumerations.TextStyle@)">
            <summary>
            Return the name representation of a given <see cref="T:NetCoreOdt.Enumerations.TextStyle"/>
            </summary>
            <param name="style">The text style for the style name</param>
            <returns>The name representation of the <see cref="T:NetCoreOdt.Enumerations.TextStyle"/> </returns>
        </member>
        <member name="M:NetCoreOdt.Helper.StyleHelper.GetStyleName(NetOdt.Enumerations.HeaderStyle@)">
            <summary>
            Return the name representation of a given <see cref="T:NetOdt.Enumerations.HeaderStyle"/>
            </summary>
            <param name="style">The header style for the style name</param>
            <returns>The name representation of the <see cref="T:NetOdt.Enumerations.HeaderStyle"/> </returns>
        </member>
        <member name="M:NetCoreOdt.Helper.StyleHelper.GetTableCellStyleName(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Return the name representation for a style for the given table cell
            </summary>
            <param name="rowNumber">The row number of the current cell</param>
            <param name="columnNumber">The column number of the current cell</param>
            <param name="columnCount">The column count of the current row</param>
            <returns>The name representation of a table column</returns>
        </member>
        <member name="T:NetCoreOdt.OdtDocument">
            <summary>
            Class to create and write ODT documents
            </summary>
            <summary>
            Class to create and write ODT documents
            </summary>
            <summary>
            Class to create and write ODT documents
            </summary>
            <summary>
            Class to create and write ODT documents
            </summary>
            <summary>
            Class to create and write ODT documents
            </summary>
            <summary>
            Class to create and write ODT documents
            </summary>
            <summary>
            Class to create and write ODT documents
            </summary>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.FileUri">
            <summary>
            The uniform resource identifier for the file
            </summary>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.TempWorkingUri">
            <summary>
            The uniform resource identifier for the temporary working folder working folder, the folder will delete when <see cref="M:NetCoreOdt.OdtDocument.Dispose"/> is called
            </summary>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.TableCount">
            <summary>
            The count of the tables
            </summary>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.PictureCount">
            <summary>
            The count of picture
            </summary>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.#ctor">
            <summary>
            Create a new ODT document, save the ODT document as "Unknown.odt" and use a automatic generated temporary folder
            under the <see cref="F:System.Environment.SpecialFolder.LocalApplicationData"/> folder
            </summary>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.#ctor(System.String@)">
            <summary>
            Create a new ODT document, save the ODT document into the given file path and use a automatic generated temporary folder
            under the <see cref="F:System.Environment.SpecialFolder.LocalApplicationData"/> folder
            </summary>
            <param name="filePath">The save path for the ODT document</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.#ctor(System.String@,System.String@)">
            <summary>
            Create a new ODT document, save the ODT document into the given file path and use the given temporary folder
            </summary>
            <param name="filePath">The save path for the ODT document</param>
            <param name="tempWorkingPath">The temporary working path for the none zipped document files</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.#ctor(System.Uri@)">
            <summary>
            Create a new ODT document, save the ODT document into the given uniform resource identifier and use a automatic generated temporary folder
            under the <see cref="F:System.Environment.SpecialFolder.LocalApplicationData"/> folder
            </summary>
            <param name="fileUri">The uniform resource identifier for the ODT document</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.#ctor(System.Uri@,System.Uri@)">
            <summary>
            Create a new ODT document, save the ODT document into the given uniform resource identifier and use the given temporary folder on the uniform resource identifier
            </summary>
            <param name="fileUri">The uniform resource identifier for the ODT document</param>
            <param name="tempWorkingUri">The uniform resource identifier  for the temporary working folder for the none zipped document files</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.Dispose">
            <summary>
            Save the document (override when existing), delete folder under the <see cref="P:NetCoreOdt.OdtDocument.TempWorkingUri"/> and free all resources
            </summary>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.Dispose(System.Boolean@)">
            <summary>
            Save the document, delete the folder under the <see cref="P:NetCoreOdt.OdtDocument.TempWorkingUri"/> and free all resources
            </summary>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.AppendImage(System.String,System.Double,System.Double)">
            <summary>
            Append a image to the document
            </summary>
            <param name="imagePath">The full path to image</param>
            <param name="width">The width of the picture in centimeter (cm)</param>
            <param name="height">The height of the picture in centimeter (cm)</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.AppendImage(System.Uri,System.Double,System.Double)">
            <summary>
            Append a image to the document
            </summary>
            <param name="imageUri">The <see cref="T:System.Uri"/> of the image</param>
            <param name="width">The width of the picture in centimeter (cm)</param>
            <param name="height">The height of the picture in centimeter (cm)</param>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.ContentFile">
             <summary>
             The XML content of the content file
            <para>TODO: #8 - Find a way to use XMLDocument class</para>
             </summary>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.BeforeStyleContent">
            <summary>
            The raw content before the <see cref="P:NetCoreOdt.OdtDocument.StyleContent"/>
            </summary>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.StyleContent">
            <summary>
            The raw style content
            </summary>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.AfterStyleContent">
            <summary>
            The raw content after the <see cref="P:NetCoreOdt.OdtDocument.StyleContent"/> and before the <see cref="P:NetCoreOdt.OdtDocument.TextContent"/>
            </summary>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.TextContent">
            <summary>
            The raw text content
            </summary>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.AfterTextContent">
            <summary>
            The raw content after the <see cref="P:NetCoreOdt.OdtDocument.TextContent"/>
            </summary>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.BeforeManifestContent">
            <summary>
            The raw content before the <see cref="P:NetCoreOdt.OdtDocument.ManifestContent"/>
            </summary>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.ManifestContent">
            <summary>
            The raw manifest content
            </summary>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.ContentFileUri">
            <summary>
            The uniform resource identifier to the content file (typical inside the <see cref="P:NetCoreOdt.OdtDocument.TempWorkingUri"/>)
            </summary>
        </member>
        <member name="P:NetCoreOdt.OdtDocument.ManifestFileUri">
            <summary>
            The uniform resource identifier to the manifest file (typical inside the <see cref="P:NetCoreOdt.OdtDocument.TempWorkingUri"/>)
            </summary>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.ReadContent">
            <summary>
            Read the complete content of the content file
            </summary>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.WriteContent">
            <summary>
            Write the complete content to the content file (overwrite the existing file)
            </summary>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.SaveAs(System.String@)">
            <summary>
            Save the change content and create the ODT document into the given path
            and automatic override a existing file
            </summary>
            <param name="filePath">The save path for the ODT document</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.SaveAs(System.Uri@)">
            <summary>
            Save the change content and create the ODT document into the uniform resource identifier
            and automatic override a existing file
            </summary>
            <param name="fileUri">The uniform resource identifier for the ODT document</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.SaveAs(System.String@,System.Boolean@)">
            <summary>
            Save the change content and create the ODT document into the given path
            </summary>
            <param name="filePath">The save path for the ODT document</param>
            <param name="overrideExistingFile">Indicate that a existing file will be override</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.SaveAs(System.Uri@,System.Boolean@)">
            <summary>
            Save the change content and create the ODT document into the uniform resource identifier
            </summary>
            <param name="fileUri">The uniform resource identifier for the ODT document</param>
            <param name="overrideExistingFile">Indicate that a existing file will be override</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.Save">
            <summary>
            Save the change content and create the ODT document and automatic override a existing file
            </summary>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.Save(System.Boolean@)">
            <summary>
            Save the change content and create the ODT document
            </summary>
            <param name="overrideExistingFile">Indicate that a existing file will be override</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.AppendTable(System.Int32@,System.Int32@)">
            <summary>
            Append an empty unformatted table with the given row and cell count into the document
            </summary>
            <param name="rowCount">The count of the rows</param>
            <param name="columnCount">The count of the columns</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.AppendTable(System.Int32@,System.Int32@,System.ValueType@)">
            <summary>
            Append a unformatted table with the given row and cell count into the document and fill each cell with the given value
            </summary>
            <param name="rowCount">The count of the rows</param>
            <param name="columnCount">The count of the columns</param>
            <param name="value">The value for each cell</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.AppendTable(System.Int32@,System.Int32@,System.String@)">
            <summary>
            Append a unformatted table with the given row and cell count into the document and fill each cell with the given text
            </summary>
            <param name="rowCount">The count of the rows</param>
            <param name="columnCount">The count of the columns</param>
            <param name="text">The text for each cell</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.AppendTable(System.Int32@,System.Int32@,System.Text.StringBuilder@)">
            <summary>
            Append a unformatted table with the given row and cell count into the document and fill each cell with the given content
            </summary>
            <param name="rowCount">The count of the rows</param>
            <param name="columnCount">The count of the columns</param>
            <param name="content">The content for each cell</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.AppendTable(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.ValueType}}@)">
            <summary>
            Append a unformatted table and fill it with the given data from the value array
            </summary>
            <param name="valueArray">The array that contains the values for the table</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.AppendTable(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}}@)">
            <summary>
            Append a unformatted table and fill it with the given data from the string array
            </summary>
            <param name="stringArray">The array that contains the strings for the table</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.AppendTable(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Text.StringBuilder}}@)">
            <summary>
            Append a unformatted table and fill it with the given content from the content array
            </summary>
            <param name="contentArray">The array that contains the contents for the table</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.AppendTable(System.Data.DataTable@)">
            <summary>
            Append a unformatted table and fill it with the given data from the <see cref="T:System.Data.DataTable"/>
            </summary>
            <param name="dataTable">The <see cref="T:System.Data.DataTable"/> that contains the data for the table</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.Append(System.ValueType@)">
            <summary>
            Append a single line with a unformatted value to the document
            </summary>
            <param name="value">The value to write into the document</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.Append(System.String@)">
            <summary>
            Append a single line with a unformatted text to the document (Note: line breaks "\n" will currently not working)
            </summary>
            <param name="text">The text to write into the document</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.Append(System.Text.StringBuilder@)">
            <summary>
            Append the content of the given <see cref="T:System.Text.StringBuilder"/> as unformatted text into the document (Note: line breaks "\n" will currently not working)
            </summary>
            <param name="content">The <see cref="T:System.Text.StringBuilder"/> that contains the content for the document</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.Append(System.ValueType@,NetCoreOdt.Enumerations.TextStyle@)">
            <summary>
            Append a single line with a styled value to the document
            </summary>
            <param name="value">The value to write into the document</param>
            <param name="style">The text style of the value</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.Append(System.String@,NetCoreOdt.Enumerations.TextStyle@)">
            <summary>
            Append a single line with a styled text to the document (Note: line breaks "\n" will currently not working)
            </summary>
            <param name="text">The text to write into the document</param>
            <param name="style">The text style of the text</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.Append(System.Text.StringBuilder@,NetCoreOdt.Enumerations.TextStyle@)">
            <summary>
            Append the content of the given <see cref="T:System.Text.StringBuilder"/> as styled text the document (Note: line breaks "\n" will currently not working)
            </summary>
            <param name="content">The <see cref="T:System.Text.StringBuilder"/> that contains the content for the document</param>
            <param name="style">The text style of the content</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.AppendEmptyLines(System.Int32)">
            <summary>
            Append the given count of empty lines
            </summary>
            <param name="countOfEmptyLines">The count of empty lines to write</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.Append(System.ValueType@,NetOdt.Enumerations.HeaderStyle@)">
            <summary>
            Append a value with the given header style
            </summary>
            <param name="value">The value for the header</param>
            <param name="style">The style of the header</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.Append(System.String@,NetOdt.Enumerations.HeaderStyle@)">
            <summary>
            Append a text with the given header style
            </summary>
            <param name="text">The text for the header</param>
            <param name="style">The style of the header</param>
        </member>
        <member name="M:NetCoreOdt.OdtDocument.Append(System.Text.StringBuilder@,NetOdt.Enumerations.HeaderStyle@)">
            <summary>
            Append a content with the given header style
            </summary>
            <param name="content">The content for the header</param>
            <param name="style">The style of the header</param>
        </member>
    </members>
</doc>
